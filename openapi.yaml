openapi: 3.0.1
info:
  title: TrailBrake API
  description: This is an API for TrailBrake to create new and load old ride data.
  version: '0.1.0'
servers:
  - url: https://driverapp-2022.de.r.appspot.com
paths:
  /rides:
    get:
      description: Request metadata for all available rides (defaults to last 20)
      parameters:
        - in: query
          name: sort
          description: Sort ascending or descending
          required: false
          schema:
            type: string
        - in: query
          name: limit
          description: Limit number of entries retrieved
          required: false
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Retrieved metadata for all available rides
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/rideMeta'
  /rides/{rideID}:
    parameters:
      - in: path
        name: rideID
        schema:
          type: string
        required: true
        description: Object ID of the target ride
        example: 507f1f77bcf86cd799439011
    get:
      description: Request data from <rideID>
      responses:
        '200':
          description: Retrieved data from one ride
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ride'
      servers:
        - url: https://driverapp-2022.de.r.appspot.com
    post:
      description: Create new data from one ride
      responses:
        '201':
          description: Created new data from one ride
    delete:
      description: Delete existing data of a ride
      responses:
        '200':
          description: Deleted existing data of a ride
components:
  schemas:
    rideMeta:
      type: object
      required: 
        - _id
        - rideName
        - rideDate
      properties:
        _id:
          type: string
          example: 507f1f77bcf86cd799439011
        rideName:
          type: string
          example: Sample Ride
        rideDate:
          type: string
          format: date-time
          example: 2000-01-01T00:00:00.000+00:00
    rideData:
      type: object
      required:
        - _id
        - timestamp
        - metadata
        - locationLat
        - locationLong
        - accelerometerX
        - accelerometerY
        - accelerometerZ
        - gyroscopeX
        - gyroscopeY
        - gyroscopeZ
      properties:
        _id:
          type: string
          example: 6333136ab4f80427841d4dd2
        timestamp:
          type: string
          format: date-time
          example: 2000-01-01T00:00:00.000+00:00
        metadata:
          type: object
          properties:
            rideRecordID:
              type: string
              example: 507f1f77bcf86cd799439011
        locationLat:
          type: number
          example: 12.123
        locationLong:
          type: number
          example: 12.123
        accelerometerX:
          type: number
          example: 12.123
        accelerometerY:
          type: number
          example: 12.123
        accelerometerZ:
          type: number
          example: 12.123
        gyroscopeX:
          type: number
          example: 12.123
        gyroscopeY:
          type: number
          example: 12.123
        gyroscopeZ:
          type: number
          example: 12.123
    ride:
      type: object
      required:
        - _id
        - rideName
        - rideDate
        - rideData
      properties:
        _id:
          type: string
          example: 507f1f77bcf86cd799439011
        rideName:
          type: string
          example: Sample Ride
        rideDate:
          type: string
          format: date-time
          example: 2000-01-01T00:00:00.000+00:00
        rideData:
          allOf:
            - $ref: '#/components/schemas/rideData'
            - type: object