openapi: 3.0.1
info:
  title: Trailbrake API
  description: Backend service for Trailbrake app.
  version: "0.1.0"
servers:
  - url: https://trailbrake-api-f6muv3fwlq-de.a.run.app
paths:
  /rides:
    get:
      description: Request metadata for all available rides (defaults to last 20)
      parameters:
        - in: query
          name: sort
          description: Sort ascending or descending
          required: false
          schema:
            type: string
        - in: query
          name: limit
          description: Limit number of entries retrieved
          required: false
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: Retrieved metadata for all available rides
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/rideRecord"
  /rides/{rideID}:
    parameters:
      - in: path
        name: rideID
        schema:
          type: string
        required: true
        description: Object ID of the target ride
        example: 507f1f77bcf86cd799439011
    get:
      description: Request data from <rideID>
      responses:
        "200":
          description: Retrieved data from one ride
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/ride"
    post:
      description: Create new data from one ride
      responses:
        "201":
          description: Created new data from one ride
    delete:
      description: Delete existing data of a ride
      responses:
        "200":
          description: Deleted existing data of a ride
  /profile/score:
    parameters:
      - in: query
        name: useRecentRides
        schema:
          type: integer
        required: false
    get:
      description: Get score for user based on `useRecentRides` (an integer) most recent rides
      responses:
        "200":
          description: User score based on `useRecentRides` (an integer) most recent rides
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/rideScore"
  /profile/stats:
    get:
      description: Get lifetime statistics
      responses:
        200:
          description: Retrieved lifetime statistics data
          content:
            application/json; charset=utf-8:
              schema:
                $ref: "#/components/schemas/userStats"
components:
  schemas:
    rideMeta:
      type: object
      required:
        - distance
        - duration
        - maxAcceleration
        - UserId
      properties:
        distance: 
          type: number
          example: 12.123
        duration: 
          type: number
          example: 12.123
        maxAcceleration: 
          type: number
          example: 12.123
        userId:
          type: string
          example: 635e2760b5219f17c17e7f74
    rideRecord:
      type: object
      required:
        - _id
        - rideName
        - rideDate
        - rideScore
        - rideMeta
      properties:
        _id:
          type: string
          example: 507f1f77bcf86cd799439011
        rideName:
          type: string
          example: Sample Ride
        rideDate:
          type: string
          format: date-time
          example: 2000-01-01T00:00:00.000+00:00
        rideScore:
          $ref: '#/components/schemas/rideScore'
        rideMeta: 
          $ref: '#/components/schemas/rideMeta'
    rideScore:
          type: object
          required:
            - overall
            - speed
            - acceleration
            - braking
            - cornering
          properties:
            overall:
              type: number
              example: 95
            speed:
              type: number
              example: 95
            acceleration:
              type: number
              example: 95
            braking:
              type: number
              example: 95
            cornering:
              type: number
              example: 95
    rideData:
      type: object
      required:
        - _id
        - timestamp
        - rideRecordId
        - locationLat
        - locationLong
        - accelerometerX
        - accelerometerY
        - accelerometerZ
        - gyroscopeX
        - gyroscopeY
        - gyroscopeZ
      properties:
        _id:
          type: string
          example: 6333136ab4f80427841d4dd2
        timestamp:
          type: string
          format: date-time
          example: 2000-01-01T00:00:00.000+00:00
        rideRecordId:
          type: string
          example: 507f1f77bcf86cd799439011
        locationLat:
          type: number
          example: 12.123
        locationLong:
          type: number
          example: 12.123
        accelerometerX:
          type: number
          example: 12.123
        accelerometerY:
          type: number
          example: 12.123
        accelerometerZ:
          type: number
          example: 12.123
        gyroscopeX:
          type: number
          example: 12.123
        gyroscopeY:
          type: number
          example: 12.123
        gyroscopeZ:
          type: number
          example: 12.123
    ride:
      type: object
      required:
        - _id
        - rideName
        - rideDate
        - rideData
      properties:
        _id:
          type: string
          example: 635e2760b5219f17c17e7f75
        rideName:
          type: string
          example: Sample Ride
        rideDate:
          type: string
          format: date-time
          example: 2000-01-01T00:00:00.000+00:00
        rideData:
          allOf:
            - $ref: "#/components/schemas/rideData"
            - type: object
    userStats:
      type: object
      required:
        - ridesCount
        - totalDistance
        - totalDuration
        - maxAcceleration
      properties:
        ridesCount:
          type: integer
          description: Total ride count
          example: 12
        totalDistance:
          type: number
          description: Total distance in meters
          example: 12.123
        totalRideTime:
          type: number
          description: Total accumulated ride time in seconds
          example: 12.123
        maxAcceleration:
          type: number
          description: Maximum acceleration in m/s^2
          example: 12.123
